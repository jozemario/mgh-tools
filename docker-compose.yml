services:
  # React App
#  nextjs-app:
#    extends:
#      file: docker-compose.base.yml
#      service: nx-app-base
#    environment:
#      - HOST=0.0.0.0
#      - DB_NAME=nextjs_app
#      - MYSQL_DATABASE=nextjs_app
#      - DATABASE_URL=postgresql://mgh_user:mgh_password@postgres:5432/nextjs_app?synchronize=true
#    build:
#      context: .
#      dockerfile: Dockerfile.ts-rest-type-safety-app
#    ports:
#      - "4201:4200"

  postgres:
    extends:
      file: docker-compose.base.yml
      service: postgres_base
    environment:
      - POSTGRES_DB=nextjs_app
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U mgh_user -d nextjs_app" ]
      interval: 5s
      timeout: 5s
      retries: 5
#  # React App
#  app-2:
#    extends:
#      file: docker-compose.base.yml
#      service: nx-app-base
#    command: npm run app-2:dev:docker
#    ports:
#      - 4202:4200
#
#  # Angular App
#  app-3:
#    extends:
#      file: docker-compose.base.yml
#      service: nx-app-base
#    command: npm run app-3:dev:docker
#    ports:
#      - 4203:4200
#
#  # Express App
#  api-1:
#    extends:
#      file: docker-compose.base.yml
#      service: nx-app-base
#    command: npm run api-1:dev:docker
#    ports:
#      - 4310:3333 # API Entry port
#      - 4311:4311 # Server Debugging port

volumes:
  node_modules:
    driver: local
    driver_opts:
      type: none
      device: ./node_modules/
      o: bind

  postgres_data:
